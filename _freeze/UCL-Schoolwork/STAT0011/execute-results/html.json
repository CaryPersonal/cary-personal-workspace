{
  "hash": "d62e9eee47ee7868c8671c4439131f5e",
  "result": {
    "markdown": "---\ntitle: STAT0011\nsubtitle: Decision and Risk\nexecute: \n  eval: false\n---\n\n\n# [**Z Score Calculator**](https://www.calculator.net/z-score-calculator.html)\n\n# [**Normal Distribution Calculator**](https://www.hackmath.net/en/calculator/normal-distribution)\n\n# **Important Distributions**\n\n## **Continuous Distributions**\n\n### **Normal Distribution (Gaussian Distribution)**\n\n![](images/image-2146374466.png)\n\n### **Uniform Distribution**\n\n![](images/image-1370233818.png)\n\n### **Gamma Distribution**\n\n![](images/image-267642431.png)\n\n# **Copula Analysis Using R**\n\n## **Week 5 Data**\n\nRequired Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages({\n  library(VineCopula) # Copula analysis\n  library(goftest) # Anderson-Darling Goodness-of-Fit test\n  library(KScorrect) # (Lilliefors-Corrected) Kolmogorov-Smirnov Goodness-of-Fit test\n  library(fGarch) # Time series analysis\n})\n```\n:::\n\n\nLoad the data and have a look:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"week5data.RData\")\nplot(dataset)\n```\n\n::: {.cell-output-display}\n![](STAT0011_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nThis does not look like a sample from a bivariate normal distribution! In fact, `ret1` follows a Student-t distribution with 10 degrees of freedom (df); `ret2` follows a Student-t distribution with 6 df. Let's assume we have this information.\n\nNext we apply **Probability Integral Transform (PIT)** to `ret1` which has Student-t distribution with 10 df:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nu1 <- pstd(dataset$ret1, mean = 0, sd = 1, nu = 10)\nhist(u1)\n```\n\n::: {.cell-output-display}\n![](STAT0011_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nImplement Kolmogorov-Smirnov test:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nKStest1 <- LcKS(u1, cdf = \"punif\")\nKStest1$p.value\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3886\n```\n:::\n:::\n\n\nImplement Anderson-Darling test:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nADtest1 <- ad.test(u1, null = \"punif\")\nADtest1$p.value\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3243088\n```\n:::\n:::\n\n\nThen we apply **Probability Integral Transform (PIT)** to `ret2` which has Student-t distribution with 6 df:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nu2 <- pstd(dataset$ret2, mean = 0, sd = 1, nu = 6)\nhist(u2)\n```\n\n::: {.cell-output-display}\n![](STAT0011_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nImplement Kolmogorov-Smirnov test:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nKStest2 <- LcKS(u2, cdf = \"punif\")\nKStest2$p.value\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2122\n```\n:::\n:::\n\n\nImplement Anderson-Darling test:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nADtest2 <- ad.test(u1, null = \"punif\")\nADtest2$p.value\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3243088\n```\n:::\n:::\n\n\nWe **pass** the **test for uniformity** for both transformed log-returns, so we can proceed to copula modelling.\n\nUsing `BiCopSelect` function fit various copulas to the dataset and select the copula that provides the best fit based on the **AIC** criterion:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- BiCopSelect(u1, u2, familyset = NA, selectioncrit = \"AIC\", indeptest = TRUE, level = 0.05)\nmodel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nBivariate copula: Clayton (par = 1.94, tau = 0.49) \n```\n:::\n:::\n\n\nThe model of best fit is **Clayton with the estimated parameter theta = 1.94**.\n\nNext we estimate the Value-at-Risk using the **Monte Carlo simulation** approach based on copula theory:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nN <- 1800\nset.seed(0123)\nu_sim <- BiCopSim(N, family = 3, model$par) # family = 3 means Clayton\n```\n:::\n\n\nNext we apply the component-wise **Inverse Probability Integral Transform (IPIT)** to both `ret1` and `ret2`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nret1_sim <- qstd(u_sim[,1], mean = 0, sd = 1, nu = 10)\nret2_sim <- qstd(u_sim[,2], mean = 0, sd = 1, nu = 6)\n```\n:::\n\n\nNote that our selected copula model is capable of generating values of log-returns with the observed dependence structure:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(2,1))\nplot(dataset, ylab = \"ret2\", xlab = \"ret1\", col = \"blue\", main = \"Original log-returns\")\nplot(data.frame(ret1_sim, ret2_sim), ylab = \"ret2_sim\", xlab = \"ret1_sim\",\n     col = \"blue\", main = \"Simulated log-returns\")\n```\n\n::: {.cell-output-display}\n![](STAT0011_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\npar(mfrow=c(1,1))\n```\n:::\n\n\nNext, compute portfolio log-returns:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nport_sim <- matrix(0, nrow = N, ncol = 1)\nVaR_sim <- matrix(0, nrow = 1, ncol = 2)\n\nport_sim <- log(1 + ((exp(ret1_sim) - 1) + (exp(ret2_sim) - 1)) * (1 / 2)) # Need to transform individual log-returns back to individual net returns, and compute portfolio net returns, finally compute portfolio log-returns.\n```\n:::\n\n\nReturn the estimated 99% and 95% Value-at-Risk estimates:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar_sim <- quantile(port_sim, c(0.01, 0.05))\nvar_sim\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       1%        5% \n-2.244965 -1.512537 \n```\n:::\n:::\n",
    "supporting": [
      "STAT0011_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}